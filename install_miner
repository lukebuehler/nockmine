#!/usr/bin/env bash
# ------------------------------------------------------------
# install_miner [INDEX] [--remove]
#
# Creates a systemd service for the nockchain miner.
# The service will restart every 4 hours automatically.
# Only supports public profile (gateway mode).
#
# INDEX: miner index (default 0)
# --remove: remove the service instead of installing
# ------------------------------------------------------------

set -euo pipefail

# ---------- 0. Parse arguments ------------------------------
REMOVE=false
case "${1:-}" in
  --remove) REMOVE=true; shift ;;
esac

# Parse index (default 0)
if (( $# > 0 )) && [[ $1 =~ ^[0-9]+$ ]]; then
  INDEX="$1"; shift
else
  INDEX="0"
fi

PORT=$((3006 + INDEX))
SERVICE_NAME="nockchain-miner-${INDEX}"

# ---------- 1. Locate repo root ------------------------------
REPO_ROOT="$(cd -- "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# ---------- 2. Load .env -------------------------------------
if [[ -f "${REPO_ROOT}/.env" ]]; then
  set -a
  # shellcheck disable=SC1090
  source "${REPO_ROOT}/.env"
  set +a
fi

# ---------- 3. CPU thread count function --------------------
get_cpu_count() {
    if [[ "$OSTYPE" == "darwin"* ]]; then
        # macOS
        sysctl -n hw.logicalcpu
    else
        # Linux (Ubuntu, etc.)
        nproc
    fi
}

# ---------- 4. Defaults --------------------------------------
export RUST_BACKTRACE="${RUST_BACKTRACE:-1}"
export RUST_LOG="${RUST_LOG:-info,nockchain=info,nockchain::nc=off,libp2p=warn,libp2p_quic=warn}"
export MINIMAL_LOG_FORMAT="${MINIMAL_LOG_FORMAT:-true}"
export MINING_PUBKEY="${MINING_PUBKEY:-3Zp2m2Lt4uWx2PKuCSuQrA7W5aAgaHLeWGsnd7eYS11PMV8Uorpm5t6TAHLVjbHc9nJgs8QcJpRaBLMZDPDkgVxQ9qT48AAVbaNk4bpeTSPVFjmEQ7HkaFgvSrnHUxqsUbMR}"
export USE_BIND="${USE_BIND:-false}"
export PEERS="${PEERS:-}"
export RUNTIME_MAX_SEC="${RUNTIME_MAX_SEC:-2h}"

# Calculate reasonable thread count (allow override via NUM_THREADS env var)
if [[ -z "${NUM_THREADS:-}" ]]; then
    total_threads=$(get_cpu_count)
    NUM_THREADS=$((total_threads * 2 - 4))
    # Ensure we have at least 1 thread
    if (( NUM_THREADS < 1 )); then
        NUM_THREADS=1
    fi
fi

# ---------- 5. Working dir & binary path -------------------
NODE_DIR="${REPO_ROOT}/miner-node-${INDEX}"
BIND_ADDR="/ip4/0.0.0.0/udp/${PORT}/quic-v1"
NOCKCHAIN_BIN="${NOCKCHAIN_BIN:-nockchain}"

# ---------- 6. Remove service if requested -------------------
if $REMOVE; then
  echo "Removing service ${SERVICE_NAME}..."
  
  # Stop and disable the service
  sudo systemctl stop "${SERVICE_NAME}" 2>/dev/null || true
  sudo systemctl disable "${SERVICE_NAME}" 2>/dev/null || true
  
  # Remove service file
  sudo rm -f "/etc/systemd/system/${SERVICE_NAME}.service"
  
  # Reload systemd
  sudo systemctl daemon-reload
  
  echo "Service ${SERVICE_NAME} removed successfully."
  exit 0
fi

# ---------- 7. Create working directory ----------------------
mkdir -p "${NODE_DIR}"

# ---------- 8. Construct nockchain command ------------------
NOCKCHAIN_CMD=(
  "${NOCKCHAIN_BIN}"
  --mining-pubkey "${MINING_PUBKEY}"
  --num-threads "${NUM_THREADS}"
  --mine
)

# Add bind address if USE_BIND is true
if [[ "${USE_BIND}" == "true" ]]; then
  NOCKCHAIN_CMD+=(--bind "${BIND_ADDR}")
fi

# Add peers if PEERS is set and not empty
if [[ -n "${PEERS:-}" ]]; then
  # Split comma-separated peers and add each with --peer flag
  IFS=',' read -ra PEER_ARRAY <<< "${PEERS}"
  for peer in "${PEER_ARRAY[@]}"; do
    # Trim whitespace from peer
    peer=$(echo "${peer}" | xargs)
    if [[ -n "${peer}" ]]; then
      NOCKCHAIN_CMD+=(--peer "${peer}")
    fi
  done
fi

# Convert array to space-separated string for systemd
EXEC_COMMAND="${NOCKCHAIN_CMD[*]}"

# ---------- 9. Create systemd service file ------------------
SERVICE_FILE="/etc/systemd/system/${SERVICE_NAME}.service"

cat <<EOF | sudo tee "${SERVICE_FILE}" > /dev/null
[Unit]
Description=Nockchain Miner ${INDEX}
After=network.target
Wants=network-online.target
StartLimitIntervalSec=3min
StartLimitBurst=3

[Service]
Type=simple
User=$(whoami)
Group=$(id -gn)
WorkingDirectory=${NODE_DIR}
Environment=RUST_BACKTRACE=${RUST_BACKTRACE}
Environment=RUST_LOG=${RUST_LOG}
Environment=MINIMAL_LOG_FORMAT=${MINIMAL_LOG_FORMAT}
ExecStartPre=/bin/bash -c 'mkdir -p "${NODE_DIR}" && cd "${NODE_DIR}" && rm -rf .socket'
ExecStart=${EXEC_COMMAND}
Restart=on-failure
RestartSec=60s
RuntimeMaxSec=${RUNTIME_MAX_SEC}
StandardOutput=journal
StandardError=journal
SyslogIdentifier=${SERVICE_NAME}

# Resource limits
LimitNOFILE=65536
LimitNPROC=32768

[Install]
WantedBy=multi-user.target
EOF

# ---------- 10. Install and start service -------------------
echo "Installing service ${SERVICE_NAME}..."

# Reload systemd
sudo systemctl daemon-reload

# Enable and start the service
sudo systemctl enable "${SERVICE_NAME}"
sudo systemctl start "${SERVICE_NAME}"

# ---------- 11. Show status and information -----------------
cat <<EOF
------------------------------------------------------------
[install_miner] SERVICE INSTALLED
  SERVICE NAME     = ${SERVICE_NAME}
  INDEX            = ${INDEX}
  UDP PORT         = ${PORT}
  NODE_DIR         = ${NODE_DIR}
  NOCKCHAIN_BIN    = ${NOCKCHAIN_BIN}
  MINING_PUBKEY    = ${MINING_PUBKEY}
  NUM_THREADS      = ${NUM_THREADS}
  USE_BIND         = ${USE_BIND}
  BIND_ADDR        = ${BIND_ADDR}
  PEERS            = ${PEERS:-none}
  RUNTIME_MAX_SEC  = ${RUNTIME_MAX_SEC}
  EXEC_COMMAND     = ${EXEC_COMMAND}
  RESTART POLICY   = on-failure (60s delay)
  RECYCLE INTERVAL = ${RUNTIME_MAX_SEC}
  RETRY LIMIT      = 3 retries per 3 minutes
------------------------------------------------------------

Service commands:
  sudo systemctl status ${SERVICE_NAME}
  sudo systemctl stop ${SERVICE_NAME}
  sudo systemctl start ${SERVICE_NAME}
  sudo systemctl restart ${SERVICE_NAME}
  sudo journalctl -u ${SERVICE_NAME} -f

To remove the service:
  ./install_miner ${INDEX} --remove

EOF

# Show current status
echo "Current service status:"
sudo systemctl status "${SERVICE_NAME}" --no-pager -l